version: 0.1

phases:

  install:
    commands:
      - 'aws codepipeline get-pipeline-state --name $PIPELINE > /tmp/pipeline.json'
      - 'docker run --rm -v $PWD:/usr/src/app -w /usr/src/app node:4.7 npm install'
      - 'docker run --rm -v $PWD:/usr/src/app -w /usr/src/app node:4.7 npm test > /tmp/unitTest.log'

  pre_build:
    commands:
      - 'date "+%Y.%m.%d-%H%M%S" > /tmp/version.out'
      - 'grep "^name:" Service.yml | sed -e "s/^name://" -e "s/\./-/g" -e "s/^\ \+//" | tr "[:upper:]" "[:lower:]" > /tmp/serviceName.out'
      - 'printf "%s:%s-v%s" "${REPOSITORY_URI}" "$(cat /tmp/serviceName.out)" "$(cat /tmp/version.out)"> /tmp/build_tag.out'
      - 'sed -i "s/^version:.*$/version: $(cat /tmp/version.out)/" Service.yml'
      - 'printf "{ \"tag\": \"$(cat /tmp/build_tag.out)\" }" > /tmp/build.json'
      - '$(aws ecr get-login)'

  build:
    commands:
      - 'docker build --tag "$(cat /tmp/build_tag.out)" .'

  post_build:
    commands:
      - 'docker push "$(cat /tmp/build_tag.out)"'
      - 'git tag "rc$(cat /tmp/version.out)"'
      - 'git push --tag'

artifacts:
  discard-paths: yes
  files:
    - /tmp/build.json
    - /tmp/unitTest.log
    - /tmp/pipeline.json
