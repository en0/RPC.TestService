version: 0.1

phases:

  install:
    commands:
      - 'docker run --rm -v $PWD:/usr/src/app -w /usr/src/app node:4.7 npm install'
      - 'docker run --rm -v $PWD:/usr/src/app -w /usr/src/app node:4.7 npm test > /tmp/unitTest.log'

  pre_build:
    commands:
      - 'date "+%Y.%m.%d-%H%M%S" > /tmp/version.out'
      - 'grep "^name:" Service.yml | sed -e "s/^name://" -e "s/^\ \+//" > /tmp/repoName.out'
      - 'sed -e "s/\./-/g" -e "s/^\ \+//" /tmp/repoName.out | tr "[:upper:]" "[:lower:]" > /tmp/serviceName.out'
      - 'printf "%s:%s-v%s" "${REPOSITORY_URI}" "$(cat /tmp/serviceName.out)" "$(cat /tmp/version.out)"> /tmp/build_tag.out'
      - 'printf "{ \"ref\": \"refs/tags/rc%s\", \"sha\": \"%s\" }" $(cat /tmp/version.out) ${CODEBUILD_RESOLVED_SOURCE_VERSION} > /tmp/req.json'
      - 'sed -i "s/^version:.*$/version: $(cat /tmp/version.out)/" Service.yml'
      - '$(aws ecr get-login)'

  build:
    commands:
      - 'docker build --no-cache --tag "$(cat /tmp/build_tag.out)" .'

  post_build:
    commands:
      - 'docker push "$(cat /tmp/build_tag.out)"'
      - 'curl -X POST -H "Content-Type: application/javascript" -H "Authorization: token ${GITHUB_TOKEN}" -d@/tmp/req.json "https://api.github.com/repos/en0/$(cat /tmp/repoName.out)/git/refs" > /tmp/ref.json'

artifacts:
  discard-paths: yes
  files:
    - /tmp/ref.json
    - /tmp/unitTest.log
